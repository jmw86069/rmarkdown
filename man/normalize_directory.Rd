% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/normalize_directory.R
\name{normalize_directory}
\alias{normalize_directory}
\title{Normalize file directory}
\usage{
normalize_directory(path, winslash = "/", mustWork = NA, ...)
}
\arguments{
\item{path}{`character` path to a file, directory, or symlink.}

\item{winslash, mustWork}{arguments are passed to `base::normalizePath()`.}

\item{...}{additional arguments are ignored.}
}
\value{
`character` path to the input `path`. When input `path` is `NULL`,
   this function returns `NULL`.
}
\description{
Normalize file directory
}
\details{
Simple wrapper over `normalizePath()` that preserves NULLs and applies
pandoc-friendly defaults, and is intended to operate only on the directory
of a file and not the filename itself.

It may have different output compared to `normalize_path()`
in these scenarios:

If `path` is a symbolic link to a file, the path returned will
use the directory name of the symlinked file, and the actual name
of the symlink file. In contrast, `normalizePath()` and `normalize_path()`
both return the directory name of the source file, and the file
name of the source file.

Consider this example:

Symbolic link file `"symlink.rmd"` is pointing to the source file
which is located at this path:
`"/some_folder/elsewhere/source_file.rmd"`.

This file may be described as follows:

`symlink.rmd -> /some_folder/elsewhere/source_file.rmd`

In this case:

`normalizaPath("symlink.rmd")` will return:

> `"/some_folder/elsewhere/source_file.rmd"`

Instead, `normalize_directory("symlink.rmd")` will return:

> `"/current_path/here/symlink.rmd"`
}
\examples{
devtools::load_all()

normalize_directory("LICENSE.md")
normalize_path("LICENSE.md")
normalizePath("LICENSE.md")

normalize_directory(c("LICENSE.md", "R"))
normalize_directory(".")

normalize_directory(".././rmarkdown")
normalize_path(".././rmarkdown")
normalizePath(".././rmarkdown")

normalize_directory("../")
normalize_directory("./../rmarkdown")

file.exists(normalize_directory("LICENSE.md"))
file.exists(normalize_directory("."))

# compare missing file output to normalizePath()
normalizePath("../LICENSE.md")
normalize_directory("../LICENSE.md")

normalizePath("../LICENSE.md", mustWork=TRUE)
normalize_directory("../LICENSE.md", mustWork=TRUE)

# demonstrate utility with symlinks
temp_path <- tempdir();
temp_subdir <- file.path(temp_path, "source_subdir")
project_subdir <- file.path(temp_path, "project_subdir")
temp_file <- file.path(temp_subdir, "temp_file.rmd")
temp_file
symlink_file <- file.path(project_subdir, "symlink_file.rmd")
symlink_file

dir.create(temp_subdir)
dir.create(project_subdir)
file.create(temp_file)
file.symlink(from=temp_file, to=symlink_file)

file.exists(c(temp_file, symlink_file))
normalizePath(c(temp_file, symlink_file))
normalize_directory(c(temp_file, symlink_file))

file.exists(normalize_directory(c(temp_file, symlink_file)))
unlink(c(temp_file, symlink_file))
unlink(c(temp_subdir, project_subdir))

}
